name: Build Huawei-Kirin710-KSU-EMUI9.1.0-Kernel
on:
  workflow_dispatch:
  schedule:
      # Run once at 12:00 on Saturday. See http://crontab.guru
      - cron: '00 12 * * 6'
  push:
    branches:
      - HEAD
  pull_request:
      branches:
      - HEAD

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_MAXSIZE: "2G"
      CCACHE_HARDLINK: "true"
      KERNEL_CMDLINE: "ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- O=out"
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'true'
        fetch-depth: 100

    - name: Set up ccache
      uses: hendrikmuhs/ccache-action@v1.2

    - name: Install dependencies
      run: |
        ls -l
        sudo apt-get update -y 
        sudo apt install binutils make python2 libssl-dev flex unzip libssl-dev ca-certificates xz-utils mkbootimg cpio device-tree-compiler git git-lfs bc bison build-essential ccache curl flex g++-multilib gcc-multilib git git-lfs gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev adb fastboot -y
        sudo ln -sf /usr/bin/python2.7 /usr/bin/python
    
    - name: GetTime
      id: get_time
      run: |
        echo "TIME=$(TZ=UTC-8 date +%m%d%H%M )" >> $GITHUB_OUTPUT

    - name: Build Kirin710-KSU Kernel
      run: |
        bash synckernelsu_all.sh
        bash clean.sh
        export HW_DEFCONFIG=kirin710_KSU_defconfig
        bash Build_kernel_github.sh
     
    
    - name: Upload Kirin710-KSU Kernel
      uses: actions/upload-artifact@v3
      with:
        name: Kirin710-KSU-EMUI9.1.0-kernel-${{ steps.get_time.outputs.TIME }}
        path: "Kirin710_EMUI_9.1.0*.img"

    - name: Build 8X-KSU-Kernel
      run: |
        rm -rf Kirin710_EMUI_9.1.0*.img
        bash synckernelsu_all.sh
        bash clean.sh
        export HW_DEFCONFIG=JSN_kirin710_KSU_defconfig
        bash Build_kernel_github.sh

    - name: Upload 8X-KSU-Kernel
      uses: actions/upload-artifact@v3
      with:
        name: 8X-Kirin710_KSU-kernel-${{ steps.get_time.outputs.TIME }}
        path: "Kirin710_EMUI_9.1.0*.img"

    - name: Build Nove4E-KSU-Kernel
      run: |
        rm -rf Kirin710_EMUI_9.1.0*.img
        bash synckernelsu_all.sh
        bash clean.sh
        export HW_DEFCONFIG=Nova4e_Kirin710_KSU_defconfig
        bash Build_kernel_github.sh

    - name: Upload Nove4E-Kirin710-KSU-Kernel
      uses: actions/upload-artifact@v3
      with:
        name: Nove4E-Kirin710_KSU-kernel-${{ steps.get_time.outputs.TIME }}
        path: "Kirin710_EMUI_9.1.0*.img"

    - name: Build Nove3i-KSU-Kernel
      run: |
        rm -rf Kirin710_EMUI_9.1.0*.img
        bash synckernelsu_all.sh
        bash clean.sh
        export HW_DEFCONFIG=Nove3i_kirin710_KSU_defconfig
        bash Build_kernel_github.sh
  
    - name: Upload Nove3i-Kirin710-KSU-Kernel
      uses: actions/upload-artifact@v3
      with:
        name: Nove3i-Kirin710_KSU-kernel-${{ steps.get_time.outputs.TIME }}
        path: "Kirin710_EMUI_9.1.0*.img"